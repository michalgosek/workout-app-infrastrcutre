// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	registry "github.com/michalgosek/workout-app-infrastrcutre/service-discovery/internal/registry"
	mock "github.com/stretchr/testify/mock"
)

// RegistryServiceOption is an autogenerated mock type for the RegistryServiceOption type
type RegistryServiceOption struct {
	mock.Mock
}

type RegistryServiceOption_Expecter struct {
	mock *mock.Mock
}

func (_m *RegistryServiceOption) EXPECT() *RegistryServiceOption_Expecter {
	return &RegistryServiceOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: s
func (_m *RegistryServiceOption) Execute(s *registry.Service) {
	_m.Called(s)
}

// RegistryServiceOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type RegistryServiceOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//  - s *registry.Service
func (_e *RegistryServiceOption_Expecter) Execute(s interface{}) *RegistryServiceOption_Execute_Call {
	return &RegistryServiceOption_Execute_Call{Call: _e.mock.On("Execute", s)}
}

func (_c *RegistryServiceOption_Execute_Call) Run(run func(s *registry.Service)) *RegistryServiceOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*registry.Service))
	})
	return _c
}

func (_c *RegistryServiceOption_Execute_Call) Return() *RegistryServiceOption_Execute_Call {
	_c.Call.Return()
	return _c
}
