// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	trainer "github.com/michalgosek/workout-app-infrastrcutre/trainings-service/internal/domain/trainer"
	mock "github.com/stretchr/testify/mock"
)

// ScheduleWorkoutHandlerRepository is an autogenerated mock type for the ScheduleWorkoutHandlerRepository type
type ScheduleWorkoutHandlerRepository struct {
	mock.Mock
}

type ScheduleWorkoutHandlerRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *ScheduleWorkoutHandlerRepository) EXPECT() *ScheduleWorkoutHandlerRepository_Expecter {
	return &ScheduleWorkoutHandlerRepository_Expecter{mock: &_m.Mock}
}

// UpsertWorkoutGroup provides a mock function with given fields: ctx, group
func (_m *ScheduleWorkoutHandlerRepository) UpsertWorkoutGroup(ctx context.Context, group trainer.WorkoutGroup) error {
	ret := _m.Called(ctx, group)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, trainer.WorkoutGroup) error); ok {
		r0 = rf(ctx, group)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ScheduleWorkoutHandlerRepository_UpsertWorkoutGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpsertWorkoutGroup'
type ScheduleWorkoutHandlerRepository_UpsertWorkoutGroup_Call struct {
	*mock.Call
}

// UpsertWorkoutGroup is a helper method to define mock.On call
//  - ctx context.Context
//  - group trainer.WorkoutGroup
func (_e *ScheduleWorkoutHandlerRepository_Expecter) UpsertWorkoutGroup(ctx interface{}, group interface{}) *ScheduleWorkoutHandlerRepository_UpsertWorkoutGroup_Call {
	return &ScheduleWorkoutHandlerRepository_UpsertWorkoutGroup_Call{Call: _e.mock.On("UpsertWorkoutGroup", ctx, group)}
}

func (_c *ScheduleWorkoutHandlerRepository_UpsertWorkoutGroup_Call) Run(run func(ctx context.Context, group trainer.WorkoutGroup)) *ScheduleWorkoutHandlerRepository_UpsertWorkoutGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(trainer.WorkoutGroup))
	})
	return _c
}

func (_c *ScheduleWorkoutHandlerRepository_UpsertWorkoutGroup_Call) Return(_a0 error) *ScheduleWorkoutHandlerRepository_UpsertWorkoutGroup_Call {
	_c.Call.Return(_a0)
	return _c
}
