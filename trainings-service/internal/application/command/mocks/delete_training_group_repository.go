// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// DeleteTrainingGroupRepository is an autogenerated mock type for the DeleteTrainingGroupRepository type
type DeleteTrainingGroupRepository struct {
	mock.Mock
}

type DeleteTrainingGroupRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *DeleteTrainingGroupRepository) EXPECT() *DeleteTrainingGroupRepository_Expecter {
	return &DeleteTrainingGroupRepository_Expecter{mock: &_m.Mock}
}

// DeleteTrainingGroup provides a mock function with given fields: ctx, trainingUUID, trainerUUID
func (_m *DeleteTrainingGroupRepository) DeleteTrainingGroup(ctx context.Context, trainingUUID string, trainerUUID string) error {
	ret := _m.Called(ctx, trainingUUID, trainerUUID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, trainingUUID, trainerUUID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteTrainingGroupRepository_DeleteTrainingGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteTrainingGroup'
type DeleteTrainingGroupRepository_DeleteTrainingGroup_Call struct {
	*mock.Call
}

// DeleteTrainingGroup is a helper method to define mock.On call
//  - ctx context.Context
//  - trainingUUID string
//  - trainerUUID string
func (_e *DeleteTrainingGroupRepository_Expecter) DeleteTrainingGroup(ctx interface{}, trainingUUID interface{}, trainerUUID interface{}) *DeleteTrainingGroupRepository_DeleteTrainingGroup_Call {
	return &DeleteTrainingGroupRepository_DeleteTrainingGroup_Call{Call: _e.mock.On("DeleteTrainingGroup", ctx, trainingUUID, trainerUUID)}
}

func (_c *DeleteTrainingGroupRepository_DeleteTrainingGroup_Call) Run(run func(ctx context.Context, trainingUUID string, trainerUUID string)) *DeleteTrainingGroupRepository_DeleteTrainingGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *DeleteTrainingGroupRepository_DeleteTrainingGroup_Call) Return(_a0 error) *DeleteTrainingGroupRepository_DeleteTrainingGroup_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewDeleteTrainingGroupRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeleteTrainingGroupRepository creates a new instance of DeleteTrainingGroupRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeleteTrainingGroupRepository(t mockConstructorTestingTNewDeleteTrainingGroupRepository) *DeleteTrainingGroupRepository {
	mock := &DeleteTrainingGroupRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
