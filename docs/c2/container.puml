`@startuml "Container diagram - C2"
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
' uncomment the following line and comment the first to use locally
' !include C4_Container.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5

!include DEVICONS/go.puml  
 

AddElementTag("microService", $shape=EightSidedShape(), $bgColor="CornflowerBlue", $fontColor="white", $legendText="micro-service (eight sided)")
AddElementTag("storage", $shape=RoundedBoxShape(), $bgColor="lightSkyBlue", $fontColor="white")
AddRelTag("async", $textColor="grey", $lineColor="grey", $lineStyle = DashedLine())

SHOW_PERSON_OUTLINE()
 
Person(customer, Member, "Person that can be personal trainer or regular customer.", )

System_Boundary(c1, "Gym Management System") {
    Container(app, "Web Application", "Container: Javascript, Vue.js", "Allows members to manage their workouts.")  
    Container(api_gateway, "API-Gateway", "Container: Go", "The point of access for all workout informations.", $tags = "microService", $sprite="go")


    Container(customer_service, "Customer Service", "Container: Go", "The point of access for all customers information.", $tags = "microService", $sprite="go")
    Container(trainings_service, "Trainings Service", "Container: Go", "The point of access for all workouts information.", $tags = "microService", $sprite="go")

    ContainerDb(customer_db, "Customer Database", "Container: MongoDB, Cache", "Stores customer information.", $tags = "storage")
    ContainerDb(trainer_db, "Trainer Database", "Container: MongoDB, Cache", "Stores trainings information.", $tags = "storage")
}

Rel(customer, app, "Manages trainings", "HTTP", $tags="async")
Rel(api_gateway, app, "Responds to", "JSON/HTTP", $tags="async")

Rel(app, api_gateway, "Makes API calls to", "JSON/HTTP", $tags="async")
Rel(api_gateway, customer_service, "Makes API calls to", "JSON/HTTP", $tags="async")
Rel(api_gateway, trainings_service, "Makes API calls to", "JSON/HTTP", $tags="async")

Rel(customer_service, customer_db, "Reads from and writes to", "JSON/HTTP", $tags="async")
Rel(customer_service, api_gateway, "Sends user data to", "JSON/HTTP", $tags="async")

Rel(trainings_service, trainer_db, "Reads from and writes to", "JSON/HTTP", $tags="async")
Rel(trainings_service, api_gateway, "Sends trainings data", "JSON/HTTP", $tags="async")



SHOW_LEGEND()
@enduml